# From https://gist.github.com/karmi/986390
# Run me with:
#
#     $ nginx -p /path/to/this/file/ -c nginx.conf
#
# All requests are then routed to authenticated user's index, so
#
#    GET http://user:password@localhost:8080/_search?q=*
#
# is rewritten to:
#
#    GET http://localhost:9200/user/_search?q=*

daemon off;

worker_processes  1;

pid         nginx.pid;

events {
    worker_connections  1024;
}


http {

  server_names_hash_bucket_size  64;

  # Public API - only GET and POST to search allowed
  server {

    listen       80;
    server_name  www.snapindexer.com snapindexer.com;

    error_log   elasticsearch-errors.log;
    access_log  elasticsearch.log;

    # POST to _search
    # ie http://snapindexer.com/product/_search
    location ~ ^/.*/?_search$ {

      include /etc/nginx/nginx_cors.conf;
      include /etc/nginx/nginx_deny.conf;

      # Authorize access
      auth_basic "Restricted";
      auth_basic_user_file /var/www/es_public/.htpasswd;

      include /etc/nginx/nginx_es.conf;
    }


    # GET requests
    location / {

      include /etc/nginx/nginx_cors.conf;

      # deny all except GET requests
      if ($request_method !~ "GET") {
        return 403;
        break;
      }

      include /etc/nginx/nginx_deny.conf;

      # Authorize access
      auth_basic "Restricted";
      auth_basic_user_file /var/www/es_public/.htpasswd;

      include /etc/nginx/nginx_es.conf;
    }
  }

  # Full access
  server {

    listen       80;
    server_name  *;

    error_log   elasticsearch-errors.log;
    access_log  elasticsearch.log;

    location /es/ {

      include /etc/nginx/nginx_deny.conf;

      # Authorize access
      auth_basic "Restricted";
      auth_basic_user_file /var/www/es/.htpasswd;

      include /etc/nginx/nginx_es.conf;
    }
  }

}
